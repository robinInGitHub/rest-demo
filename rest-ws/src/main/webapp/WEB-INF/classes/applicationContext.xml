<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">


	<!-- Scan for Jersey Rest Annotations and Spring Annotations -->
	<context:component-scan base-package="com.cdel.rest.service" />
	<context:component-scan base-package="com.cdel.rest.resource" />
	<context:component-scan base-package="com.cdel.rest.entity" />
	<context:annotation-config />
	<tx:annotation-driven />
	<import resource="spring.xml" />
	
	<!-- Where the properties files live -->
	<context:property-placeholder location="classpath*:/*.properties"/>
	
	<!--  Using dbcp (Data Base Connection Pooling) suitable for production use -->
	<bean id="dataSourceW" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${database.driverClassName}"/>
        <property name="url" value="${database.url}"/>
        <property name="username" value="${database.username}"/>
        <property name="password" value="${database.password}"/>
    </bean>
    <bean id="dataSourceR" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${database.driverClassName}"/>
        <property name="url" value="${database.url}"/>
        <property name="username" value="${database.username}"/>
        <property name="password" value="${database.password}"/>
    </bean>

	<!-- Create write sqlSessionFactory --><!-- 
	<bean id="sqlSessionFactoryW" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="mapperLocations" value="classpath:mybatis/write/*.xml" />
		<property name="dataSource" ref="dataSourceW" />
	</bean>
	
    <bean id="sqlSessionW" class="org.mybatis.spring.SqlSessionTemplate"> 
      <constructor-arg ref="sqlSessionFactoryW" />
    </bean>
    
    <bean id="mapperScannerW" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.cdel.rest.dao.write" />
        <property name="sqlSessionTemplate" ref="sqlSessionW" />
    </bean>

    Create read sqlSessionFactory
    <bean id="sqlSessionFactoryR" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="mapperLocations" value="classpath:mybatis/read/*.xml" />
        <property name="dataSource" ref="dataSourceR" />
    </bean>
    
    <bean id="sqlSessionR" class="org.mybatis.spring.SqlSessionTemplate"> 
      <constructor-arg ref="sqlSessionFactoryR" />
    </bean>
    
    <bean id="mapperScannerR" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.cdel.rest.dao.read" />
        <property name="sqlSessionTemplate" ref="sqlSessionR" />
    </bean> -->
     <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSourceR" />  
        <!-- 自动扫描mapping.xml文件 -->  
        <property name="mapperLocations" value="classpath:mybatis/read/*.xml"></property>  
    </bean>  
  
    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.cdel.rest.dao.read" />  
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>  
    </bean>
    
    <bean id="sqlSessionFactoryW" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSourceW" />  
        <!-- 自动扫描mapping.xml文件 -->  
        <property name="mapperLocations" value="classpath:mybatis/write/*.xml"></property>  
    </bean>  
  
    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.cdel.rest.dao.write" />  
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryW"></property>  
    </bean>  
  
    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->  
    <bean id="transactionManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSourceW" />  
    </bean> 
</beans>


